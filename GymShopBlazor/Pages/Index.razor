@page "/"
@using GymShopBlazor.ApiService
@using GymShopBlazor.Helpers
@using GymShopBlazor.Models

<head>
    <link href="css/product.css" rel="stylesheet" />
</head>


<div class="index-header">
    <img src="GymShopHeader.png" alt="Välkommen till Gym Shop"/>
</div>


@if (isLoading)
{
    <div class="loading-info">
        <h3>Laddar produkter...</h3>
    </div>
}
else if (!isLoading && !products.Any())
{
    <div class="loading-info">
        <h3>Inga produkter hittades.</h3>
    </div>
}
else
{
    <div class="product-container">
        @foreach (var category in categories)
        {
            var productsInCategory = products
            .Where(p => p.Category.Id == category.Id)
            .Take(6)
            .ToList();

            if (productsInCategory.Any())
            {
                <div class="category-section">
                    <h3>@Translations.GetTranslatedCategoryName(category.Name)</h3>
                    <div class="product-list">
                        @foreach (var product in productsInCategory)
                        {
                            <ProductComponent Product="product" OnAddToCart="HandleAddToCart" />
                        }
                    </div>
                </div>
            }
        }
    </div>
}

@code {
    private List<Product> products = new();
    private List<Category> categories = new();
    private bool isLoading = true;

    [Inject] private ProductService ProductService { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        products = await ProductService.GetAll();
        categories = await ProductService.GetCategories();
        isLoading = false;
    }

    private void HandleAddToCart(Product product)
    {
        Console.WriteLine($"{product.Name} tillagd i varukorgen!");
    }
}
