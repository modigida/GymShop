@page "/cart"
@using GymShopBlazor.Models
@using GymShopBlazor.Pages

<head>
    <link href="css/cart.css" rel="stylesheet" />
</head>

<div class="shopping-cart">
    <h3>Varukorg</h3>

    @foreach (var item in CartService.CartItems)
    {
        <CartItem Item="item" OnQuantityChanged="UpdateQuantity" OnRemove="RemoveItem" />
    }

    @if (CartService.CartItems.Count > 0)
    {
        <div class="cart-summary">
            <h4>Totalt ordervärde: @CartService.CartItems.Sum(item => item.CurrentPrice * item.Quantity).ToString("0.00") SEK</h4>
            @if (!_isCheckoutOpen)
            {
                <button class="btn btn-success" @onclick="OpenCheckout">Betala</button>
            }
        </div>
    }
    else
    {
        <p>Din varukorg är tom.</p>
    }

    @if (_isCheckoutOpen)
    {
        <Checkout/>
    }
</div>

@code {
    private bool _isCheckoutOpen = false;

    [Inject] private CartService CartService { get; set; } = default!;

    protected override void OnInitialized()
    {
        CartService.OnCartUpdated += StateHasChanged;
    }

    public void Dispose()
    {
        CartService.OnCartUpdated -= StateHasChanged;
    }

    private void UpdateQuantity(int newQuantity)
    {
        StateHasChanged();
    }

    private void RemoveItem(OrderProduct item)
    {
        CartService.RemoveFromCart(item);
    }

    private void OpenCheckout()
    {
        _isCheckoutOpen = !_isCheckoutOpen;
    }
}
